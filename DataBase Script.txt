CREATE TABLE Service_Provider_Type (
    service_provider_type_id INT PRIMARY KEY,
    service_provider_type VARCHAR(255) NOT NULL
);
--------------------------------------------------------------------------
CREATE TABLE Customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone_number VARCHAR(15),
    address_id INT,
    FOREIGN KEY (address_id) REFERENCES Address(address_id)
);

-------------------------------------------------------------------
CREATE TABLE Service_Provider (
    service_provider_id INT PRIMARY KEY,
    service_provider_type_id INT,
    shop_name VARCHAR(255),
    ser_provider_name VARCHAR(255),
    ser_provider_contact VARCHAR(15),
    ser_provider_address_id INT,
    FOREIGN KEY (service_provider_type_id) REFERENCES Service_Provider_Type(service_provider_type_id),
    FOREIGN KEY (ser_provider_address_id) REFERENCES Address(address_id)
);

--------------------------------------------------------
CREATE TABLE `Order` (
    order_id INT PRIMARY KEY,
    customer_id INT,
    service_provider_id INT,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) NOT NULL,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES Customer(customer_id),
    FOREIGN KEY (service_provider_id) REFERENCES Service_Provider(service_provider_id)
);


--------------------------------------------------

CREATE TABLE Order_Tracking (
    tracking_id INT PRIMARY KEY,
    order_id INT,
    tracking_status VARCHAR(50) NOT NULL,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES `Order`(order_id)
);
--------------------------------------------------
CREATE TABLE Order_Alteration (
    alteration_id INT PRIMARY KEY,
    order_id INT,
    customer_id INT,
    service_provider_id INT,
    requested_changes TEXT NOT NULL,
    status VARCHAR(50) DEFAULT 'Pending',
    request_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES `Order`(order_id),
    FOREIGN KEY (customer_id) REFERENCES Customer(customer_id),
    FOREIGN KEY (service_provider_id) REFERENCES Service_Provider(service_provider_id)
);
---------------------------------------------------
CREATE TABLE Category (
    category_id INT PRIMARY KEY,
    category_name VARCHAR(255) NOT NULL,
    description TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
---------------------------------------------------
CREATE TABLE Item_Master (
    item_id INT PRIMARY KEY,
    item_name VARCHAR(255) NOT NULL,
    description TEXT,
    category VARCHAR(100),
    price DECIMAL(10, 2) NOT NULL,
    quantity_in_stock INT DEFAULT 0,
    unit_of_measure VARCHAR(50),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


